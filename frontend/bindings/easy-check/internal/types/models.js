// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

/**
 * Host 定义前端需要的主机类型
 */
export class Host {
    /**
     * Creates a new Host instance.
     * @param {Partial<Host>} [$$source = {}] - The source object to create the Host.
     */
    constructor($$source = {}) {
        if (!("host" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["host"] = "";
        }
        if (!("description" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["description"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new Host instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {Host}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new Host(/** @type {Partial<Host>} */($$parsedSource));
    }
}

export class HostLatencyData {
    /**
     * Creates a new HostLatencyData instance.
     * @param {Partial<HostLatencyData>} [$$source = {}] - The source object to create the HostLatencyData.
     */
    constructor($$source = {}) {
        if (!("host" in $$source)) {
            /**
             * @member
             * @type {string}
             */
            this["host"] = "";
        }
        if (!("min_latency" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["min_latency"] = 0;
        }
        if (!("avg_latency" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["avg_latency"] = 0;
        }
        if (!("max_latency" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["max_latency"] = 0;
        }
        if (!("packet_loss" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["packet_loss"] = 0;
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new HostLatencyData instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {HostLatencyData}
     */
    static createFrom($$source = {}) {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new HostLatencyData(/** @type {Partial<HostLatencyData>} */($$parsedSource));
    }
}

/**
 * HostsLatencyResponse
 */
export class HostsLatencyResponse {
    /**
     * Creates a new HostsLatencyResponse instance.
     * @param {Partial<HostsLatencyResponse>} [$$source = {}] - The source object to create the HostsLatencyResponse.
     */
    constructor($$source = {}) {
        if (!("hosts" in $$source)) {
            /**
             * @member
             * @type {HostLatencyData[]}
             */
            this["hosts"] = [];
        }
        if (!("total" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["total"] = 0;
        }
        if (/** @type {any} */(false)) {
            /**
             * @member
             * @type {string | undefined}
             */
            this["error"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new HostsLatencyResponse instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {HostsLatencyResponse}
     */
    static createFrom($$source = {}) {
        const $$createField0_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("hosts" in $$parsedSource) {
            $$parsedSource["hosts"] = $$createField0_0($$parsedSource["hosts"]);
        }
        return new HostsLatencyResponse(/** @type {Partial<HostsLatencyResponse>} */($$parsedSource));
    }
}

/**
 * HostsResponse 定义返回给前端的结构体
 */
export class HostsResponse {
    /**
     * Creates a new HostsResponse instance.
     * @param {Partial<HostsResponse>} [$$source = {}] - The source object to create the HostsResponse.
     */
    constructor($$source = {}) {
        if (!("hosts" in $$source)) {
            /**
             * @member
             * @type {Host[]}
             */
            this["hosts"] = [];
        }
        if (!("total" in $$source)) {
            /**
             * @member
             * @type {number}
             */
            this["total"] = 0;
        }
        if (/** @type {any} */(false)) {
            /**
             * @member
             * @type {string | undefined}
             */
            this["error"] = "";
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new HostsResponse instance from a string or object.
     * @param {any} [$$source = {}]
     * @returns {HostsResponse}
     */
    static createFrom($$source = {}) {
        const $$createField0_0 = $$createType3;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("hosts" in $$parsedSource) {
            $$parsedSource["hosts"] = $$createField0_0($$parsedSource["hosts"]);
        }
        return new HostsResponse(/** @type {Partial<HostsResponse>} */($$parsedSource));
    }
}

// Private type creation functions
const $$createType0 = HostLatencyData.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = Host.createFrom;
const $$createType3 = $Create.Array($$createType2);
